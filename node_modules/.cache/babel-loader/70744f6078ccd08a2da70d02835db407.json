{"ast":null,"code":"const initialState = {\n  inputType: 1,\n  inputText: \"HelloWorld\",\n  expenses: [{\n    id: 0,\n    text: 'test',\n    type: 1\n  }]\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === 'SET_INPUT_TYPE') {\n    const newState = Object.assign([], state);\n    newState.inputType = action.payload.inputType;\n    return newState;\n  }\n\n  if (action.type === 'SET_INPUT_TEXT') {\n    const newState = Object.assign([], state);\n    newState.inputText = action.payload.inputText;\n    return newState;\n  }\n\n  if (action.type === 'INSERT_EXPENSES') {\n    if (state.inputText !== '' || state.inputType === 0) {\n      console.log(\"empty\");\n      return state;\n    }\n\n    const newState = Object.assign([], state);\n    newState.expenses = [...newState.expenses, {\n      id: newState.expenses.length !== 0 ? newState.expenses[newState.expenses.length - 1].id + 1 : 0,\n      text: newState.inputText,\n      type: newState.inputType\n    }];\n    newState.inputType = 0;\n    newState.inputText = '';\n    console.log(newState);\n    return newState;\n  }\n\n  if (action.type === 'REMOVE_EXPENSE') {\n    const newState = Object.assign([], state);\n    console.log(action.payload.remove_id);\n    newState.expenses = state.expenses.filter(n => n.id !== action.payload.remove_id);\n    console.log(newState);\n    return newState;\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/koki1023/GitHub/HouseholdAccountApp/src/store/reducer.js"],"names":["initialState","inputType","inputText","expenses","id","text","type","reducer","state","action","newState","Object","assign","payload","console","log","length","remove_id","filter","n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAG,CADK;AAEjBC,EAAAA,SAAS,EAAG,YAFK;AAGjBC,EAAAA,QAAQ,EAAG,CAAC;AACRC,IAAAA,EAAE,EAAG,CADG;AAERC,IAAAA,IAAI,EAAG,MAFC;AAGRC,IAAAA,IAAI,EAAE;AAHE,GAAD;AAHM,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9C,MAAGA,MAAM,CAACH,IAAP,KAAgB,gBAAnB,EAAoC;AAChC,UAAMI,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,CAAjB;AACAE,IAAAA,QAAQ,CAACT,SAAT,GAAqBQ,MAAM,CAACI,OAAP,CAAeZ,SAApC;AACA,WAAOS,QAAP;AACH;;AACD,MAAGD,MAAM,CAACH,IAAP,KAAgB,gBAAnB,EAAoC;AAChC,UAAMI,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,CAAjB;AACAE,IAAAA,QAAQ,CAACR,SAAT,GAAqBO,MAAM,CAACI,OAAP,CAAeX,SAApC;AACA,WAAOQ,QAAP;AACH;;AACD,MAAGD,MAAM,CAACH,IAAP,KAAgB,iBAAnB,EAAqC;AACjC,QAAGE,KAAK,CAACN,SAAN,KAAoB,EAApB,IAA0BM,KAAK,CAACP,SAAN,KAAoB,CAAjD,EAAmD;AAC/Ca,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAOP,KAAP;AACH;;AACD,UAAME,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,CAAjB;AACAE,IAAAA,QAAQ,CAACP,QAAT,GAAoB,CAAC,GAAGO,QAAQ,CAACP,QAAb,EAAsB;AACtCC,MAAAA,EAAE,EAAEM,QAAQ,CAACP,QAAT,CAAkBa,MAAlB,KAA6B,CAA7B,GAAkCN,QAAQ,CAACP,QAAT,CAAkBO,QAAQ,CAACP,QAAT,CAAkBa,MAAlB,GAA2B,CAA7C,CAAD,CAAkDZ,EAAlD,GAAuD,CAAxF,GAA4F,CAD1D;AAEtCC,MAAAA,IAAI,EAAEK,QAAQ,CAACR,SAFuB;AAGtCI,MAAAA,IAAI,EAAEI,QAAQ,CAACT;AAHuB,KAAtB,CAApB;AAKAS,IAAAA,QAAQ,CAACT,SAAT,GAAqB,CAArB;AACAS,IAAAA,QAAQ,CAACR,SAAT,GAAqB,EAArB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,WAAOA,QAAP;AACH;;AACD,MAAGD,MAAM,CAACH,IAAP,KAAgB,gBAAnB,EAAoC;AAChC,UAAMI,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,CAAjB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACI,OAAP,CAAeI,SAA3B;AACAP,IAAAA,QAAQ,CAACP,QAAT,GAAoBK,KAAK,CAACL,QAAN,CAAee,MAAf,CAAsBC,CAAC,IAAIA,CAAC,CAACf,EAAF,KAASK,MAAM,CAACI,OAAP,CAAeI,SAAnD,CAApB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,WAAOA,QAAP;AACH;;AAED,SAAOF,KAAP;AACH,CApCD;;AAsCA,eAAeD,OAAf","sourcesContent":["const initialState = {\n    inputType : 1,\n    inputText : \"HelloWorld\",\n    expenses : [{\n        id : 0,\n        text : 'test',\n        type :1\n    }],\n}\n\nconst reducer = (state = initialState, action) => {\n    if(action.type === 'SET_INPUT_TYPE'){\n        const newState = Object.assign([],state);\n        newState.inputType = action.payload.inputType;\n        return newState;\n    }\n    if(action.type === 'SET_INPUT_TEXT'){\n        const newState = Object.assign([],state);\n        newState.inputText = action.payload.inputText;\n        return newState;\n    }\n    if(action.type === 'INSERT_EXPENSES'){\n        if(state.inputText !== '' || state.inputType === 0){\n            console.log(\"empty\")\n            return state;\n        }\n        const newState = Object.assign([],state);\n        newState.expenses = [...newState.expenses,{\n            id: newState.expenses.length !== 0 ? (newState.expenses[newState.expenses.length - 1]).id + 1 : 0,\n            text: newState.inputText,\n            type: newState.inputType\n        }]\n        newState.inputType = 0;\n        newState.inputText = '';\n        console.log(newState);\n        return newState\n    }\n    if(action.type === 'REMOVE_EXPENSE'){\n        const newState = Object.assign([],state);\n        console.log(action.payload.remove_id)\n        newState.expenses = state.expenses.filter(n => n.id !== action.payload.remove_id);\n        console.log(newState);\n        return newState\n    }\n\n    return state;\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}